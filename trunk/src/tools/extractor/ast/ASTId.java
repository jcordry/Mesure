/* Generated By:JJTree: Do not edit this line. ASTId.java */

package tools.extractor.ast;

public class ASTId extends SimpleNode {
  public String name;

  public ASTId(int id) {
    super(id);
  }

  public ASTId(EquationAST p, int id) {
    super(p, id);
  }

  public String toString() { return (EquationASTTreeConstants.jjtNodeName[id]+" "+name); }

  public Double evaluate() throws ASTException {
      Double d = symbtab.get(name);
      if (d == null) throw new ASTException(name);
      return(symbtab.get(name));
  }

  public double solve(String xname, Node t1) throws SolvingException {
	  dump("Id  ");
	  if ((name.compareTo(xname) == 0)
			  || (name.compareTo("x") == 0)
			  || (name.compareTo("X") == 0)) {
		  dump("Id1 ");
		  try {
			  double d = Double.valueOf(t1.evaluate());
			  System.out.println("xxx "+d);
			  return(d);
		  } catch (ASTException e) {
			  throw new SolvingException(e.getMessage());
		  }  
	  }
	  throw new SolvingException(xname);
  }
}
